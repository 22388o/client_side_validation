{-
  Id: urn:ubideco:stl:4SZ2EgWWtC5LsNXmNpAzogNHZoaZNTCwU3SQhAYwDX6A#citizen-fiction-corner
  Name: CommitVerify
  Version: 0.1.0
  Description: Client-side-validation deterministic commitments
  Author: Dr Maxim Orlovsky <orlovsky@lnp-bp.org>
  Copyright (C) 2023 LNP/BP Standards Association. All rights reserved.
  License: Apache-2.0
-}

@context
typelib CommitVerify

import Std#55f8bsTvyh7zAeYAiNwL9G1DxgwXzDvE8edcTFJz3Q9H#milan-poncho-gray
  use U5#nitro-george-nebula


@mnemonic(ventura-equal-think)
data Commitment        : [Byte ^ 32]

@mnemonic(iris-explore-script)
data MerkleBlock       : depth Std.U5#nitro-george-nebula
                       , cofactor U16
                       , crossSection [TreeNode ^ ..0xffffffff]
                       , entropy U64?

@mnemonic(culture-metro-modular)
data MerkleHash        : [Byte ^ 32]

@mnemonic(father-adios-common)
data MerkleProof       : pos U32
                       , cofactor U16
                       , path [MerkleHash ^ ..0x20]

@mnemonic(civil-left-nova)
data MerkleTree        : depth Std.U5#nitro-george-nebula
                       , entropy U64
                       , cofactor U16
                       , messages {ProtocolId -> ^ ..0xffffff Message}
                       , map {U32 -> ^ ..0xffffff ProtocolId, Message}

@mnemonic(shampoo-bishop-morgan)
data Message           : [Byte ^ 32]

@mnemonic(gamma-banjo-corona)
data ProtocolId        : [Byte ^ 32]

@mnemonic(empty-active-truck)
data TreeNode          : concealedNode (depth Std.U5#nitro-george-nebula, hash MerkleHash)
                       | commitmentLeaf (protocolId ProtocolId, message Message)


